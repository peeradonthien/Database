db.getCollection('orders_w_lines').aggregate(
  [
    {
      $lookup:
        /**
        * from: The target collection.
        * localField: The local join field.
        * foreignField: The target join field.
        * as: The name for the results.
        * pipeline: Optional pipeline to run on the foreign collection.
        * let: Optional variables to use in the pipeline field stages.
        */
        {
          from: "customer",
          localField: "customer_id",
          foreignField: "customer_id",
          as: "result"
        }
    },
    {
      $unwind:
        /**
        * path: Path to the array field.
        * includeArrayIndex: Optional name for index.
        * preserveNullAndEmptyArrays: Optional
        *   toggle to unwind null and empty values.
        */
        {
          path: "$result",
          includeArrayIndex: "string",
          preserveNullAndEmptyArrays: true
        }
    },
    {
      $group:
        /**
        * _id: The id of the group.
        * fieldN: The first field name.
        */
        {
          _id: "$customer_id",
          customer_name: {
            $first: "$result.customer_name"
          },
          num_orders: {
            $sum: 1
          }
        }
    },
    {
      $project:
        /**
        * specifications: The fields to
        *   include or exclude.
        */
        {
          customer_id: "$_id",
          customer_name: "$customer_name",
          num_orders: "$num_orders",
          _id: 0
        }
    },
    {
      $sort:
        /**
        * Provide any number of field/order pairs.
        */
        {
          num_orders: -1
        }
    }
  ]
);